# ===================================================================
# NGINX КОНФИГУРАЦИЯ ДЛЯ YII2 ПРИЛОЖЕНИЯ (BACKEND API)
# Файл: /etc/nginx/sites-available/yii2-backend
# ===================================================================

# === HTTPS для API домена (можно использовать отдельный домен или поддомен) ===
server {
    listen 443 ssl http2;
    server_name api.mytests.space;
    
    # SSL сертификаты
    ssl_certificate /etc/letsencrypt/live/mytests.space/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mytests.space/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Корневая директория Yii2 приложения
    root /var/www/vacancy-system/backend/web;
    index index.php index.html;
    
    # Логи
    access_log /var/log/nginx/yii2_api_access.log;
    error_log /var/log/nginx/yii2_api_error.log;
    
    # Основные настройки
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Charset
    charset utf-8;
    
    # Основные API маршруты
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # PHP обработка
    location ~ \.php$ {
        try_files $uri =404;
        
        fastcgi_pass unix:/run/php/php8.1-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        
        # Стандартные FastCGI параметры
        include fastcgi_params;
        
        # Переменные окружения Yii2
        fastcgi_param YII_ENV prod;
        fastcgi_param YII_DEBUG 0;
        
        # Дополнительные параметры для API
        fastcgi_param HTTP_AUTHORIZATION $http_authorization;
        fastcgi_param HTTPS on;
        
        # Таймауты
        fastcgi_connect_timeout 60s;
        fastcgi_send_timeout 60s;
        fastcgi_read_timeout 60s;
        
        # Буферизация
        fastcgi_buffering on;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 16k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
    }
    
    # Статические ресурсы (assets)
    location /assets/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Сжатие статических файлов
        location ~* \.(js|css)$ {
            gzip_static on;
        }
    }
    
    # Загружаемые файлы (если есть)
    location /uploads/ {
        expires 30d;
        add_header Cache-Control "public";
        
        # Безопасность - запрет выполнения PHP в uploads
        location ~ \.php$ {
            deny all;
        }
    }
    
    # Health check для мониторинга
    location /health {
        try_files $uri /index.php?$query_string;
        access_log off;
    }
    
    # API документация (если используете Swagger/OpenAPI)
    location /docs {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # Robots.txt
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    
    # Favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 30d;
    }
    
    # Безопасность - запрет доступа к системным файлам
    location ~ /\.(htaccess|htpasswd|ini|log|sh|sql|conf|git)$ {
        deny all;
        return 404;
    }
    
    # Безопасность - запрет доступа к служебным директориям Yii2
    location ~ /(runtime|tests|migrations|commands|config|vendor)/ {
        deny all;
        return 404;
    }
    
    # Безопасность - запрет выполнения PHP в определенных директориях
    location ~* ^/(uploads|assets)/.*\.php$ {
        deny all;
        return 404;
    }
    
    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        application/json
        application/javascript
        application/xml
        application/rss+xml
        application/atom+xml
        text/javascript
        text/xml
        text/css
        text/plain;
}

# === Альтернативная конфигурация: API как поддиректория основного домена ===
server {
    listen 443 ssl http2;
    server_name mytests.space;
    
    # SSL сертификаты
    ssl_certificate /etc/letsencrypt/live/mytests.space/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mytests.space/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Логи
    access_log /var/log/nginx/yii2_backend_access.log;
    error_log /var/log/nginx/yii2_backend_error.log;
    
    # Основные настройки
    client_max_body_size 100M;
    charset utf-8;
    
    # API маршруты (например: https://mytests.space/api/...)
    location /api/ {
        root /var/www/vacancy-system/backend/web;
        try_files $uri $uri/ /index.php?$query_string;
        
        location ~ \.php$ {
            root /var/www/vacancy-system/backend/web;
            try_files $uri =404;
            
            fastcgi_pass unix:/run/php/php8.1-fpm.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            
            # Переменные окружения
            fastcgi_param YII_ENV prod;
            fastcgi_param YII_DEBUG 0;
            fastcgi_param HTTP_AUTHORIZATION $http_authorization;
            fastcgi_param HTTPS on;
            
            # Таймауты
            fastcgi_connect_timeout 60s;
            fastcgi_send_timeout 60s;
            fastcgi_read_timeout 60s;
        }
    }
    
    # Статические файлы backend
    location /assets/ {
        root /var/www/vacancy-system/backend/web;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Health check для backend
    location /api/health {
        root /var/www/vacancy-system/backend/web;
        try_files $uri /index.php?$query_string;
        
        location ~ \.php$ {
            root /var/www/vacancy-system/backend/web;
            fastcgi_pass unix:/run/php/php8.1-fpm.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_param YII_ENV prod;
            fastcgi_param YII_DEBUG 0;
        }
    }
    
    # Все остальные запросы на frontend (Nuxt)
    location / {
        proxy_pass http://127.0.0.1:4206;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
    }
    
    # Безопасность
    location ~ /\.(htaccess|htpasswd|ini|log|sh|sql|conf|git)$ {
        deny all;
        return 404;
    }
}

# === HTTP → HTTPS редирект для API домена ===
server {
    listen 80;
    server_name api.mytests.space mytests.space;
    
    access_log /var/log/nginx/yii2_redirect_access.log;
    
    return 301 https://$host$request_uri;
}

# ===================================================================
# ДОПОЛНИТЕЛЬНАЯ КОНФИГУРАЦИЯ ДЛЯ РАЗРАБОТКИ (ОПЦИОНАЛЬНО)
# ===================================================================

# === Конфигурация для разработки (HTTP, без SSL) ===
server {
    listen 8080;
    server_name localhost 127.0.0.1;
    
    root /var/www/vacancy-system/backend/web;
    index index.php index.html;
    
    # Логи для разработки
    access_log /var/log/nginx/yii2_dev_access.log;
    error_log /var/log/nginx/yii2_dev_error.log;
    
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass unix:/run/php/php8.1-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Настройки для разработки
        fastcgi_param YII_ENV dev;
        fastcgi_param YII_DEBUG 1;
    }
    
    location /assets/ {
        expires 1h;
    }
}

# ===================================================================
# ИНСТРУКЦИИ ПО УСТАНОВКЕ:
# 1. Сохранить файл как: /etc/nginx/sites-available/yii2-backend
# 2. Создать симлинк: ln -s /etc/nginx/sites-available/yii2-backend /etc/nginx/sites-enabled/
# 3. Настроить права доступа:
#    - chown -R www-data:www-data /var/www/vacancy-system/backend/web/assets
#    - chown -R www-data:www-data /var/www/vacancy-system/backend/runtime
#    - chmod -R 775 /var/www/vacancy-system/backend/web/assets
#    - chmod -R 775 /var/www/vacancy-system/backend/runtime
# 4. Проверить конфигурацию: nginx -t
# 5. Перезагрузить Nginx: systemctl reload nginx
# 6. Проверить PHP-FPM: systemctl status php8.1-fpm
# ===================================================================
